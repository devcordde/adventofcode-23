print([f"Part 1: {x[0]}\nPart 2: {x[1]}" for x in [__import__("functools").reduce(lambda x, y: (x[0] + y[0], x[1] + y[1]), [[(int(__import__("re").match("Game (\\d+)", g).group(1)) * int(colors["red"] <= 12 and colors["green"] <= 13 and colors["blue"] <= 14), __import__("functools").reduce(lambda x, y: x * y, colors.values())) for colors in [__import__("functools").reduce(lambda x, y: {key: max(x.get(key, 0), y.get(key, 0)) for key in set(x) | set(y)}, [{color: int((__import__("re").search(f"(\\d+) {color}", draw) or __import__("re").search("(.)", "1")).group(1)) * int(draw.count(color) > 0)} for draw in __import__("re").split("; ?|: ", g) for color in ["red", "green", "blue"]])]][0] for g in open("input.txt")])]][0])
